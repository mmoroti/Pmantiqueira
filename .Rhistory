tlim = c(12.2, 13.9), flim = c(0, 8), collevels = seq(-30, 0, 0.1))
# Controlando eixos x e y respectivamente
spectro(adv.call, osc=TRUE, grid=FALSE, scale = TRUE,collevels = seq(-40, 0, 0.1), palette =  spectro.colors,
cont=TRUE, contlevels=seq(-25, 0, 5),
cexaxis=1.4, cexlab=1.3, scalecexlab = 1.2
tlim = c(12.2, 13.9), flim = c(0, 8), collevels = seq(-30, 0, 0.1))
# Controlando eixos x e y respectivamente
spectro(adv.call, osc=TRUE, grid=FALSE, scale = TRUE,
tlim = c(12.2, 13.9), flim = c(0, 8), collevels = seq(-30, 0, 0.1), collevels = seq(-40, 0, 0.1), palette =  spectro.colors,
cont=TRUE, contlevels=seq(-25, 0, 5),
cexaxis=1.4, cexlab=1.3, scalecexlab = 1.2)
spectro(adv.call, osc=TRUE, grid=FALSE, scale = TRUE,
tlim = c(12.2, 13.9), flim = c(0, 8), collevels = seq(-30, 0, 0.1), collevels = seq(-40, 0, 0.1), palette =  spectro.colors,
cont=TRUE, contlevels=seq(-25, 0, 5),
cexaxis=1.4, cexlab=1.3, scalecexlab = 1.2)
# Controlando eixos x e y respectivamente
spectro(adv.call, osc=TRUE, grid=FALSE, scale = TRUE,
tlim = c(12.2, 13.9), flim = c(0, 8), collevels = seq(-30, 0, 0.1), palette =  spectro.colors,
cont=TRUE, contlevels=seq(-25, 0, 5),
cexaxis=1.4, cexlab=1.3, scalecexlab = 1.2)
# Controlando eixos x e y respectivamente
spectro(adv.call, osc=TRUE, grid=FALSE, scale = TRUE,
tlim = c(12.2, 13.9), flim = c(0, 8), collevels = seq(-30, 0, 0.1), palette =  spectro.colors,
cexaxis=1.4, cexlab=1.3, scalecexlab = 1.2)
dir()
release <- readWave("cantosolturafig1.wav")
release <- readWave("cantosolturafig1.wav")
agressive <- readWave("id9_c16_Nota X.wav")
# release call
spectro(release, from=2, to=5)
spectro(release, osc=TRUE, grid=FALSE, scale = TRUE,
tlim = c(12.2, 13.9), flim = c(0, 8), collevels = seq(-30, 0, 0.1), palette =  spectro.colors,
cexaxis=1.4, cexlab=1.3, scalecexlab = 1.2)
spectro(release, osc=TRUE, grid=FALSE, scale = TRUE,
tlim = c(0, 1), flim = c(0, 8), collevels = seq(-30, 0, 0.1), palette =  spectro.colors,
cexaxis=1.4, cexlab=1.3, scalecexlab = 1.2)
spectro(release, osc=TRUE, grid=FALSE, scale = TRUE,
tlim = c(0, 1), flim = c(0, 4), collevels = seq(-30, 0, 0.1), palette =  spectro.colors,
cexaxis=1.4, cexlab=1.3, scalecexlab = 1.2)
spectro(release, osc=TRUE, grid=FALSE, scale = TRUE,
tlim = c(0, 1), flim = c(0, 4))
spectro(release, osc=TRUE, grid=FALSE, scale = TRUE,
tlim = c(0, 0.6), flim = c(0, 4)), collevels = seq(-30, 0, 0.1), palette =  spectro.colors,
cexaxis=1.4, cexlab=1.3, scalecexlab = 1.2)
spectro(release, osc=TRUE, grid=FALSE, scale = TRUE,
tlim = c(0, 0.6), flim = c(0, 4))
spectro(release, osc=TRUE, grid=FALSE, scale = TRUE,
tlim = c(0, 0.6), flim = c(0, 8))
spectro(release, osc=TRUE, grid=FALSE, scale = TRUE,
tlim = c(0, 0.6), flim = c(0, 12))
spectro(release, osc=TRUE, grid=FALSE, scale = TRUE,
tlim = c(0, 0.6), flim = c(0, 20))
spectro(release, osc=TRUE, grid=FALSE, scale = TRUE,
tlim = c(0, 0.8), flim = c(0, 20))
spectro(release, osc=TRUE, grid=FALSE, scale = TRUE,
tlim = c(0, 0.7), flim = c(0, 20))
spectro(release, osc=TRUE, grid=FALSE, scale = TRUE,
tlim = c(0, 0.6), flim = c(0, 18))
spectro(release, osc=TRUE, grid=FALSE, scale = TRUE,
tlim = c(0, 0.6), flim = c(0, 18), cexaxis=1.4, cexlab=1.3, scalecexlab = 1.2)
spectro(release, osc=TRUE, grid=FALSE, scale = TRUE,
tlim = c(0, 0.5), flim = c(0, 18), cexaxis=1.4, cexlab=1.3, scalecexlab = 1.2)
# Controlando eixos x e y respectivamente
# Canto de anúncio
spectro(adv.call, osc=TRUE, grid=FALSE, scale = TRUE,
tlim = c(12.2, 13.9), flim = c(0, 8), collevels = seq(-30, 0, 0.1), palette =  spectro.colors,
cexaxis=1.4, cexlab=1.3, scalecexlab = 1.2)
# agressive call
spectro(agressive, osc=TRUE, grid=FALSE, scale = TRUE,
tlim = c(0, 0.5), flim = c(0, 18), cexaxis=1.4, cexlab=1.3, scalecexlab = 1.2)
# agressive call
spectro(agressive, osc=TRUE, grid=FALSE, scale = TRUE,
tlim = c(4.5, 12), flim = c(0, 18), cexaxis=1.4, cexlab=1.3, scalecexlab = 1.2)
# agressive call
spectro(agressive, osc=TRUE, grid=FALSE, scale = TRUE,
tlim = c(4.5, 12), flim = c(0, 6), cexaxis=1.4, cexlab=1.3, scalecexlab = 1.2)
# agressive call
spectro(agressive, osc=TRUE, grid=FALSE, scale = TRUE,
tlim = c(5, 7), flim = c(0, 6), cexaxis=1.4, cexlab=1.3, scalecexlab = 1.2)
# agressive call
spectro(agressive, osc=TRUE, grid=FALSE, scale = TRUE,
tlim = c(5, 8), flim = c(0, 6), cexaxis=1.4, cexlab=1.3, scalecexlab = 1.2)
# agressive call
spectro(agressive, osc=TRUE, grid=FALSE, scale = TRUE,
tlim = c(5, 6.5), flim = c(0, 5.5), cexaxis=1.4, cexlab=1.3, scalecexlab = 1.2)
# agressive call
spectro(agressive, osc=TRUE, grid=FALSE, scale = TRUE,
tlim = c(5, 7), flim = c(0, 5.5), cexaxis=1.4, cexlab=1.3, scalecexlab = 1.2)
# release call
spectro(release, osc=TRUE, grid=FALSE, scale = TRUE,
tlim = c(0, 0.5), flim = c(0, 18), cexaxis=1.4, cexlab=1.3, scalecexlab = 1.2)
library(circular)
library(tidyverse)
library(nlme)
library(vegan)
library(mgcv)
# Estabelecendo diretório e carregando arquivos
setwd("E:/Projeto Dacnis/Trabalhos em andamento/Paratelmatobius/analises_paratelmatobius_morotietal")
dir()
monitoring.para <- read.table("Para.csv", sep = ";", h=T)
str(monitoring.para)
monitoring.para$X <- as.factor(monitoring.para$X)
monitoring.para
dados_pad <- decostand(monitoring.para[,c(2,3,4)], "standardize")
#Agrupando e retirando dados antigos
para <- cbind(monitoring.para, dados_pad)
para <- para[,-c(2,3,4)]
# Checando distribui??o dos dados
hist(para$cap)
AICctab(gls1, gls2, gls3,gls4,gls5, gls6, gls7, gls8, gls9, base=T, weights=T)
dados <- read.table("data.txt", h=T)
# Para testarmos se a ocorr?ncia de P. mantiqueira tem um padr?o de ocorr?ncia sazonal, n?s aplicamos o teste de Rayleigh
dir()
x
rayleigh.test(x, mu = NULL)
?rayleigh.test
rayleigh.test(x, mu = circular(0))
rayleigh.test(x, mu = circular(pi))
rao.spacing.test(x)
hist(x)
x
y <- rayleigh.test(x, mu = circular(pi))
summary(y)
y <- rayleigh.test(x, mu = circular(pi))
summary(y)
y
dados
para
print(x)
rayleigh.test(x, mu = circular(pi))
8.69*10^-4
# Testando estruturas de correla??o para os dados
#corAR1
gls1 <- gam(cap ~ temp + umi|mes, data = para,correlation = corAR1(form=~mes), family = gaussian)
gls1
summary(gls1)
gls2 <- gam(cap ~ temp,correlation = corAR1(form=~mes), data = para, family = gaussian)
gls
gls2
summary(gls2)
# Testando estruturas de correla??o para os dados
#corAR1
gls1 <- gam(cap ~ temp + umi|mes, data = para,correlation = corAR1(form=~mes), family = gamma)
# Testando estruturas de correla??o para os dados
#corAR1
gls1 <- gam(cap ~ temp + umi|mes, data = para,correlation = corAR1(form=~mes), family = log)
knitr::opts_chunk$set(warning = FALSE, message = FALSE, error=FALSE)
install.packages("AEM", repos="http://R-Forge.R-project.org")
library(GGally)
library(nlme)
library(mgcv)
library(tidyverse)
library(lmtest)
library(bbmle)
library(tseries)
library(astsa)
library(circular)
library(adespatial)
library(GGally)
library(nlme)
library(mgcv)
library(tidyverse)
library(lmtest)
library(bbmle)
library(tseries)
library(astsa)
library(circular)
library(adespatial)
library(ade4)
library(adegraphics)
library(expsmooth)
library(vegan)
library(AEM)
dados<-read.table("data.txt", header=T) #composição de espécies de uma comunidade de anuros no Parque Estadual da Serra Furada, SC.
dados<-read.table("data.txt", header=T) #composição de espécies de uma comunidade de anuros no Parque Estadual da Serra Furada, SC.
dados
hist(dados$abundancia) #verificando visualmente
ggplot(dados, aes(abundancia))+
geom_density(aes(fill="red", col="red"))
hist(dados$riqueza)
ggplot(dados, aes(riqueza))+
geom_density(aes(fill="red", col="red"))
ggpairs(dados)
par(mfrow=c(2,2))
plot(mod.ols)
dados_normal<-read.table("normal.txt", header=T)
dados_normal
mod.ols <- lm(abundancia ~ temperatura,data=dados_normal)
summary(mod.ols)
par(mfrow=c(2,2))
plot(mod.ols)
par(mfrow=c(1,1))
gam1 <- gam(abundancia ~ temperatura + s(mes), data = dados, family = poisson)
acf(residuals(gam1))
gam.check(gam1)
# Testando estruturas de correla??o para os dados
#corAR1
gls1 <- gam(cap ~ temp + umi + (s)mes, data = para,correlation = corAR1(form=~mes), family = poisson)
para
gamm1 <- gamm(abundancia ~ temperatura + s(mes),data = dados, family = poisson)
# Testando estruturas de correla??o para os dados
#corAR1
gls1 <- gamm(cap ~ temp + umi + (s)mes, data = para,correlation = corAR1(form=~mes), family = poisson)
# Testando estruturas de correla??o para os dados
#corAR1
gls1 <- gamm(cap ~ temp + umi , data = para,correlation = corAR1(form=~mes), family = poisson)
# Testando estruturas de correla??o para os dados
#corAR1
gls1 <- gamm(cap ~ temp + (s)mes, data = para,correlation = corAR1(form=~mes), family = poisson)
gamm2 <- gamm(abundancia ~ temperatura+ s(mes), data=dados, correlation=corAR1(form=~mes), family = poisson)
para
# Testando estruturas de correla??o para os dados
#corAR1
gls1 <- gamm(cap ~ temp + (s)mes, data = para, correlation = corAR1(form=~mes), family = poisson)
# Testando estruturas de correla??o para os dados
#corAR1
gls1 <- gamm(cap ~ temp + (s) mes, data = para, correlation = corAR1(form=~mes), family = poisson)
# Testando estruturas de correla??o para os dados
#corAR1
gls1 <- gamm(cap ~ temp + s(mes), data = para, correlation = corAR1(form=~mes), family = poisson)
summary(gls1)
# Testando estruturas de correla??o para os dados
#corAR1
gls1 <- gamm(cap ~ temp + umi + s(mes), data = para, correlation = corAR1(form=~mes), family = poisson)
# Testando estruturas de correla??o para os dados
#corAR1
gls1 <- gamm(cap ~ temp + umi + s(mes), data = para, correlation = corAR1(form=~mes), family = poisson)
para
monitoring.para
dados_pad <- decostand(monitoring.para[,c(2,3)], "standardize")
#Agrupando e retirando dados antigos
para <- cbind(monitoring.para, dados_pad)
para
para <- para[,-c(2,3,4)]
# Checando distribui??o dos dados
hist(para$cap)
# Testando estruturas de correla??o para os dados
#corAR1
gamm1 <- gamm(cap ~ temp + umi + s(mes), data = para, correlation = corAR1(form=~mes), family = poisson)
# Testando estruturas de correla??o para os dados
#corAR1
gamm1 <- gamm(cap ~ temp + s(mes), data = para, correlation = corAR1(form=~mes), family = poisson)
summary(gamm1)
acf(residuals(gamm1$gam))
gam.check(gamm1$gam)
# Testando estruturas de correla??o para os dados
#corAR1
gamm1 <- gamm(cap ~ temp + umi, data = para, correlation = corAR1(form=~mes), family = poisson)
summary(gamm1)
# Testando estruturas de correla??o para os dados
#corAR1
gamm1 <- gamm(cap ~ umi + s(mes), data = para, correlation = corAR1(form=~mes), family = poisson)
summary(gamm1)
acf(residuals(gamm1$gam))
gam.check(gamm1$gam)
summary(gamm1$gam)
# Testando estruturas de correla??o para os dados
#corAR1
gamm1 <- gamm(cap ~ temp + s(mes), data = para, correlation = corAR1(form=~mes), family = poisson)
summary(gamm1)
acf(residuals(gamm1$gam))
gam.check(gamm1$gam)
summary(gamm1$gam)
# Testando estruturas de correla??o para os dados
#corAR1
gamm1 <- gamm(cap ~ umi + temp + s(mes), data = para, correlation = corAR1(form=~mes), family = poisson)
# Testando estruturas de correla??o para os dados
#corAR1
gamm1 <- gamm(cap ~ (s)umi + (s)temp + s(mes), data = para, correlation = corAR1(form=~mes), family = poisson)
# Testando estruturas de correla??o para os dados
#corAR1
gamm1 <- gamm(cap ~ (s) umi + (s) temp + s(mes), data = para, correlation = corAR1(form=~mes), family = poisson)
# Testando estruturas de correla??o para os dados
#corAR1
gamm1 <- gamm(cap ~ umi + (s) temp + s(mes), data = para, correlation = corAR1(form=~mes), family = poisson)
# Testando estruturas de correla??o para os dados
#corAR1
gamm1 <- gamm(cap ~ umi + temp + s(mes), data = para, correlation = corAR1(form=~mes), family = poisson)
summary(gamm1$gam)
acf(residuals(gamm1$gam))
gam.check(gamm1$gam)
gamm2 <- gamm(cap ~ temp + s(mes), correlation = corAR1(form=~mes), data = para, family = poisson)
gamm3 <- gamm(cap ~ umi + s(mes), data = para, correlation = corAR1(form=~mes), family = poisson)
AICctab(gamm3$lme, gamm2$lme, gamm1$lme , base=T, weights=T)
e1<-resid(gamm2, typpe="pearson")
overdispersion<-sum(e1^2)/gamm2$gam$df.residual
overdispersion
gamm2
# segundo modelo com estrutura de correla??o
gamm4 <- gamm(cap ~ temp + umi + (s) mes, data = para,correlation = corARMA(form=~mes), family = poisson)
# segundo modelo com estrutura de correla??o
gamm4 <- gamm(cap ~ temp + umi + (s)mes, data = para,correlation = corARMA(form=~mes), family = poisson)
# segundo modelo com estrutura de correla??o
gamm4 <- gamm(cap ~ umi + temp + s(mes), data = para,correlation = corARMA(form=~mes), family = poisson)
# segundo modelo com estrutura de correla??o
gamm4 <- gamm(cap ~ umi + temp + s(mes), data = para,correlation = corARMA(form=~mes), family = poisson)
# segundo modelo com estrutura de correla??o
gamm4 <- gamm(cap ~ umi + temp + s(mes), data = para, correlation = corARMA(form=~mes), family = poisson)
library(circular)
library(tidyverse)
library(nlme)
library(vegan)
library(mgcv)
# segundo modelo com estrutura de correla??o
gamm4 <- gamm(cap ~ umi + temp + s(mes), data = para, correlation = corARMA(form=~mes), family = poisson)
gamm5 <- gamm(cap ~ temp + s(mes),correlation = corARMA(form=~mes), data = para, family = poisson)
gamm6 <- gamm(cap ~ umi + s(mes), data = para, correlation = corARMA(form=~mes), family = poisson)
gamm1 <- gamm(cap ~ umi + temp + s(mes), data = para, correlation = corAR1(form=~mes), family = poisson)
gamm2 <- gamm(cap ~ temp + s(mes), correlation = corAR1(form=~mes), data = para, family = poisson)
gamm3 <- gamm(cap ~ umi + s(mes), data = para, correlation = corAR1(form=~mes), family = poisson)
# terceira estrutura de correla??o
gamm7 <- gamm(cap ~ temp + umi + s(mes), data = para,correlation = corSpher(form=~mes), family = poisson)
gamm7 <- gamm(cap ~ temp + umi + s(mes), data = para,correlation = corSpher(form=~mes), family = poisson)
gamm8 <- gamm(cap ~ temp + s(mes),correlation = corSpher(form=~mes), data = para, family = poisson)
gamm9 <- gamm(cap ~ umi + s(mes), data = para,correlation = corSpher(form=~mes), family = poisson)
# segundo modelo com estrutura de correla??o
gamm4 <- gamm(cap ~ umi + temp + s(mes), data = para, correlation = corARMA(form=~mes), family = poisson)
summary(gamm1$gam, cor = FALSE)
AICctab(gamm1, gamm2, gamm3, gamm7, gamm8, gamm9, base=T, weights=T)
AICctab(gamm1, gamm2, gamm3, gamm7, gamm8, gamm9, base=T, weights=T)
AICctab(gamm1, gamm2, gamm3)
AICctab(gamm7, gamm8, gamm9, base=T, weights=T)
AICctab(gamm1$lme, gamm2$lme, gamm3$lme, gamm7$lme, gamm8$lme, gamm9$lme, base=T, weights=T)
gamm6 <- gamm(cap ~ umi + s(mes), data = para, correlation = corARMA(form=~mes), family = poisson)
?gamm
gamm6 <- gamm(cap ~ umi + s(mes), data = para, correlation = corLin(form=~mes), family = poisson)
gamm5 <- gamm(cap ~ temp + s(mes),correlation = corLin(form=~mes), data = para, family = poisson)
gamm4 <- gamm(cap ~ umi + temp + s(mes), data = para, correlation = corLinform=~mes), family = poisson)
gamm4 <- gamm(cap ~ umi + temp + s(mes), data = para, correlation = corLin(form=~mes), family = poisson)
gamm5 <- gamm(cap ~ temp + s(mes),correlation = corLin(form=~mes), data = para, family = poisson)
gamm6 <- gamm(cap ~ umi + s(mes), data = para, correlation = corLin(form=~mes), family = poisson)
AICctab(gamm1$lme, gamm2$lme, gamm3$lme, gamm7$lme, gamm8$lme, gamm9$lme, gamm4$lme, gamm5$lme, gamm6$lme, base=T, weights=T)
summary(gamm5$gam)
gamm1 <- gamm(cap ~ umi + temp + s(mes), data = para, correlation = corAR1(form=~mes), family = poisson)
gamm2 <- gamm(cap ~ umi + temp + s(mes), correlation = corARMA(form=~mes), data = para, family = poisson)
gamm3 <- gamm(cap ~ umi + temp + s(mes), data = para, correlation = corCAR1(form=~mes), family = poisson)
gamm4 <- gamm(cap ~ umi + temp + s(mes), data = para, correlation = corCompSymm(form=~mes), family = poisson)
gamm5 <- gamm(cap ~ umi + temp + s(mes),correlation = corExp(form=~mes), data = para, family = poisson)
gamm6 <- gamm(cap ~ umi + temp + s(mes), data = para, correlation = corLin(form=~mes), family = poisson)
gamm7 <- gamm(cap ~ umi + temp + s(mes), data = para,correlation = corGaus(form=~mes), family = poisson)
gamm8 <- gamm(cap ~ umi + temp + s(mes), correlation = corRatio(form=~mes), data = para, family = poisson)
gamm9 <- gamm(cap ~ umi + temp + s(mes), data = para,correlation = corSpher(form=~mes), family = poisson)
gamm9 <- gamm(cap ~ umi + temp + s(mes), data = para,correlation = corSymm(form=~mes), family = poisson)
gamm10 <- gamm(cap ~ umi + temp + s(mes), data = para,correlation = corSymm(form=~mes), family = poisson)
gamm9 <- gamm(cap ~ umi + temp + s(mes), data = para,correlation = corSpher(form=~mes), family = poisson)
AICctab(gamm1$lme, gamm2$lme, gamm3$lme, gamm7$lme, gamm8$lme, gamm9$lme, gamm4$lme, gamm5$lme, gamm6$lme, gamm10$lme, base=T, weights=T)
AICctab(gamm1$lme, gamm2$lme, gamm3$lme, gamm7$lme, gamm8$lme, gamm9$lme, gamm4$lme, gamm5$lme, gamm6$lme, base=T, weights=T)
AICctab(gamm1$lme, gamm2$lme, gamm3$lme, gamm7$lme, gamm8$lme, gamm9$lme, gamm5$lme, gamm6$lme, base=T, weights=T)
summary(gamm2$gam)
gamm2 <- gamm(cap ~ umi + temp + s(mes), correlation = corARMA(form=~mes), data = para, family = poisson)
AICctab(gamm1$lme, gamm3$lme, gamm7$lme, gamm8$lme, gamm9$lme, gamm5$lme, gamm6$lme, base=T, weights=T)
e1<-resid(gamm2, typpe="pearson")
overdispersion<-sum(e1^2)/gamm2$gam$df.residual
overdispersion
summary(gamm2$gam)
AICctab(gamm1$lme, gamm3$lme, gamm7$lme, gamm8$lme, gamm9$lme, gamm5$lme, gamm6$lme, base=T, weights=T)
summary(gamm1$gam)
e1<-resid(gamm1, typpe="pearson")
overdispersion<-sum(e1^2)/gamm1$gam$df.residual
overdispersion
# Testando estruturas de correla??o para os dados
#corAR1
gamm11 <- gamm(cap ~ s(umi) + s(temp) + s(mes), data = para, correlation = corAR1(form=~mes), family = poisson)
summary(gamm1$gam)
AICctab(gamm1$lme, gamm3$lme, gamm7$lme, gamm8$lme, gamm9$lme, gamm5$lme, gamm6$lme, base=T, weights=T)
library(circular)
library(tidyverse)
library(nlme)
library(vegan)
library(mgcv)
library(seewave)
library(tuneR)
library(rgl)
#
getwd()
adv.call <- readWave("Id3_10_complexo.wav")
dir()
dir()
adv.call <- readWave("Id3_10_complexo.wav")
oscillo(adv.call)
oscillo(adv.call, from=4, to=4.5, fastdisp=TRUE)
spectro(adv.call,from=4, to=4.5, fastdisp=TRUE)
# Controlando eixos x e y respectivamente
# Canto de an?ncio
spectro(adv.call, osc=TRUE, grid=FALSE, scale = TRUE,
tlim = c(44.7, 44.9), flim = c(0, 8), collevels = seq(-30, 0, 0.1), palette =  spectro.colors,
cexaxis=1.4, cexlab=1.3, scalecexlab = 1.2)
# Controlando eixos x e y respectivamente
# Canto de an?ncio
spectro(adv.call, osc=TRUE, grid=FALSE, scale = TRUE,
tlim = c(44.78, 44.98), flim = c(0, 8), collevels = seq(-30, 0, 0.1), palette =  spectro.colors,
cexaxis=1.4, cexlab=1.3, scalecexlab = 1.2)
# Controlando eixos x e y respectivamente
# Canto de an?ncio
spectro(adv.call, osc=TRUE, grid=FALSE, scale = TRUE,
tlim = c(44.78, 45), flim = c(0, 8), collevels = seq(-30, 0, 0.1), palette =  spectro.colors,
cexaxis=1.4, cexlab=1.3, scalecexlab = 1.2)
# Controlando eixos x e y respectivamente
# Canto de an?ncio
spectro(adv.call, osc=TRUE, grid=FALSE, scale = TRUE,
tlim = c(44.78, 45), flim = c(0, 6), collevels = seq(-30, 0, 0.1), palette =  spectro.colors,
cexaxis=1.4, cexlab=1.3, scalecexlab = 1.2)
# Controlando eixos x e y respectivamente
# Canto de an?ncio
spectro(adv.call, osc=TRUE, grid=FALSE, scale = TRUE,
tlim = c(44.78, 45), flim = c(0, 5), collevels = seq(-30, 0, 0.1), palette =  spectro.colors,
cexaxis=1.4, cexlab=1.3, scalecexlab = 1.2)
# Controlando eixos x e y respectivamente
# Canto de an?ncio
spectro(adv.call, osc=TRUE, grid=FALSE, scale = TRUE,
tlim = c(44, 45), flim = c(0, 5), collevels = seq(-30, 0, 0.1), palette =  spectro.colors,
cexaxis=1.4, cexlab=1.3, scalecexlab = 1.2)
# Controlando eixos x e y respectivamente
# Canto de an?ncio
spectro(adv.call, osc=TRUE, grid=FALSE, scale = TRUE,
tlim = c(44.7, 45), flim = c(0, 5), collevels = seq(-30, 0, 0.1), palette =  spectro.colors,
cexaxis=1.4, cexlab=1.3, scalecexlab = 1.2)
# Controlando eixos x e y respectivamente
# Canto de an?ncio
spectro(adv.call, osc=TRUE, grid=FALSE, scale = TRUE,
tlim = c(44.7, 44.9), flim = c(0, 5), collevels = seq(-30, 0, 0.1), palette =  spectro.colors,
cexaxis=1.4, cexlab=1.3, scalecexlab = 1.2)
# Controlando eixos x e y respectivamente
# Canto de an?ncio
spectro(adv.call, osc=TRUE, grid=FALSE, scale = TRUE,
tlim = c(44.8, 45), flim = c(0, 5), collevels = seq(-30, 0, 0.1), palette =  spectro.colors,
cexaxis=1.4, cexlab=1.3, scalecexlab = 1.2)
# Controlando eixos x e y respectivamente
# Canto de an?ncio
spectro(adv.call, osc=TRUE, grid=FALSE, scale = TRUE,
tlim = c(44.7, 45), flim = c(0, 5), collevels = seq(-30, 0, 0.1), palette =  spectro.colors,
cexaxis=1.4, cexlab=1.3, scalecexlab = 1.2)
# Controlando eixos x e y respectivamente
# Canto de an?ncio
spectro(adv.call, osc=TRUE, grid=FALSE, scale = TRUE,
tlim = c(44.7, 45), flim = c(0, 5), collevels = seq(-30, 0, 0.1), palette =  spectro.colors,
cexaxis=1.4, cexlab=1.3, scalecexlab = 1.2)
# Controlando eixos x e y respectivamente
# Canto de an?ncio
spectro(adv.call, osc=TRUE, grid=FALSE, scale = TRUE,
tlim = c(44.75, 45), flim = c(0, 5), collevels = seq(-30, 0, 0.1), palette =  spectro.colors,
cexaxis=1.4, cexlab=1.3, scalecexlab = 1.2)
# Controlando eixos x e y respectivamente
# Canto de an?ncio
spectro(adv.call, osc=TRUE, grid=FALSE, scale = TRUE,
tlim = c(44.75, 45.27), flim = c(0, 5), collevels = seq(-30, 0, 0.1), palette =  spectro.colors,
cexaxis=1.4, cexlab=1.3, scalecexlab = 1.2)
# Controlando eixos x e y respectivamente
# Canto de an?ncio
spectro(adv.call, osc=TRUE, grid=FALSE, scale = TRUE,
tlim = c(44.75, 45.25), flim = c(0, 5), collevels = seq(-30, 0, 0.1), palette =  spectro.colors,
cexaxis=1.4, cexlab=1.3, scalecexlab = 1.2)
# Controlando eixos x e y respectivamente
# Canto de an?ncio
spectro(adv.call, osc=TRUE, grid=FALSE, scale = TRUE,
tlim = c(44.75, 45), flim = c(0, 5), collevels = seq(-30, 0, 0.1), palette =  spectro.colors,
cexaxis=1.4, cexlab=1.3, scalecexlab = 1.2)
# Controlando eixos x e y respectivamente
# Canto de an?ncio
spectro(adv.call, osc=TRUE, grid=FALSE, scale = TRUE,
tlim = c(44.70, 45), flim = c(0, 5), collevels = seq(-30, 0, 0.1), palette =  spectro.colors,
cexaxis=1.4, cexlab=1.3, scalecexlab = 1.2)
# Controlando eixos x e y respectivamente
# Canto de an?ncio
spectro(adv.call, osc=TRUE, grid=FALSE, scale = TRUE,
tlim = c(44.8, 45), flim = c(0, 5), collevels = seq(-30, 0, 0.1), palette =  spectro.colors,
cexaxis=1.4, cexlab=1.3, scalecexlab = 1.2)
# Controlando eixos x e y respectivamente
# Canto de an?ncio
spectro(adv.call, osc=TRUE, grid=FALSE, scale = TRUE,
tlim = c(44.75, 45), flim = c(0, 5), collevels = seq(-30, 0, 0.1), palette =  spectro.colors,
cexaxis=1.4, cexlab=1.3, scalecexlab = 1.2)
# Controlando eixos x e y respectivamente
# Canto de an?ncio
spectro(adv.call, osc=TRUE, grid=FALSE, scale = TRUE,
tlim = c(44.75, 45.05), flim = c(0, 5), collevels = seq(-30, 0, 0.1), palette =  spectro.colors,
cexaxis=1.4, cexlab=1.3, scalecexlab = 1.2)
# Controlando eixos x e y respectivamente
# Canto de an?ncio
spectro(adv.call, osc=TRUE, grid=FALSE, scale = TRUE,
tlim = c(50.3, 51.6), flim = c(0, 5), collevels = seq(-30, 0, 0.1), palette =  spectro.colors,
cexaxis=1.4, cexlab=1.3, scalecexlab = 1.2)
# Controlando eixos x e y respectivamente
# Canto de an?ncio
spectro(adv.call, osc=TRUE, grid=FALSE, scale = TRUE,
tlim = c(50.8, 51), flim = c(0, 5), collevels = seq(-30, 0, 0.1), palette =  spectro.colors,
cexaxis=1.4, cexlab=1.3, scalecexlab = 1.2)
# Controlando eixos x e y respectivamente
# Canto de an?ncio
spectro(adv.call, osc=TRUE, grid=FALSE, scale = TRUE,
tlim = c(50.8, 51), flim = c(0, 8), collevels = seq(-30, 0, 0.1), palette =  spectro.colors,
cexaxis=1.4, cexlab=1.3, scalecexlab = 1.2)
# Controlando eixos x e y respectivamente
# Canto de an?ncio
spectro(adv.call, osc=TRUE, grid=FALSE, scale = TRUE,
tlim = c(50, 51), flim = c(0, 8), collevels = seq(-30, 0, 0.1), palette =  spectro.colors,
cexaxis=1.4, cexlab=1.3, scalecexlab = 1.2)
# Controlando eixos x e y respectivamente
# Canto de an?ncio
spectro(adv.call, osc=TRUE, grid=FALSE, scale = TRUE,
tlim = c(50, 50.8), flim = c(0, 8), collevels = seq(-30, 0, 0.1), palette =  spectro.colors,
cexaxis=1.4, cexlab=1.3, scalecexlab = 1.2)
# Controlando eixos x e y respectivamente
# Canto de an?ncio
spectro(adv.call, osc=TRUE, grid=FALSE, scale = TRUE,
tlim = c(50, 50.9), flim = c(0, 8), collevels = seq(-30, 0, 0.1), palette =  spectro.colors,
cexaxis=1.4, cexlab=1.3, scalecexlab = 1.2)
# Controlando eixos x e y respectivamente
# Canto de an?ncio
spectro(adv.call, osc=TRUE, grid=FALSE, scale = TRUE,
tlim = c(50, 50.6), flim = c(0, 8), collevels = seq(-30, 0, 0.1), palette =  spectro.colors,
cexaxis=1.4, cexlab=1.3, scalecexlab = 1.2)
